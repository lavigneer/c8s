{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://c8s.dev/schemas/pipeline-config.json",
  "title": "Pipeline Configuration",
  "description": "JSON Schema for validating .c8s.yaml pipeline configuration files in repositories",
  "type": "object",
  "required": ["version", "name", "steps"],
  "properties": {
    "version": {
      "type": "string",
      "enum": ["v1alpha1"],
      "description": "Pipeline configuration schema version"
    },
    "name": {
      "type": "string",
      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
      "description": "Pipeline name (must be valid Kubernetes resource name)"
    },
    "steps": {
      "type": "array",
      "minItems": 1,
      "description": "Pipeline steps in execution order",
      "items": {
        "$ref": "#/definitions/step"
      }
    },
    "timeout": {
      "type": "string",
      "pattern": "^[0-9]+(s|m|h)$",
      "default": "1h",
      "description": "Pipeline-level timeout (e.g., 30m, 2h)"
    },
    "matrix": {
      "$ref": "#/definitions/matrix",
      "description": "Matrix strategy for parallel execution with parameter variations"
    }
  },
  "definitions": {
    "step": {
      "type": "object",
      "required": ["name", "image", "commands"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
          "description": "Step identifier (must be unique within pipeline)"
        },
        "image": {
          "type": "string",
          "description": "Container image for step execution (e.g., golang:1.21, ubuntu:22.04)"
        },
        "commands": {
          "type": "array",
          "minItems": 1,
          "description": "Shell commands to execute in order",
          "items": {
            "type": "string"
          }
        },
        "dependsOn": {
          "type": "array",
          "description": "Names of steps that must complete before this step runs",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "resources": {
          "type": "object",
          "description": "CPU and memory resource requests",
          "properties": {
            "cpu": {
              "type": "string",
              "pattern": "^[0-9]+m?$",
              "default": "500m",
              "description": "CPU request (e.g., 500m, 2)"
            },
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+(Mi|Gi)$",
              "default": "1Gi",
              "description": "Memory request (e.g., 1Gi, 512Mi)"
            }
          },
          "additionalProperties": false
        },
        "timeout": {
          "type": "string",
          "pattern": "^[0-9]+(s|m|h)$",
          "default": "30m",
          "description": "Step-level timeout (must be less than pipeline timeout)"
        },
        "artifacts": {
          "type": "array",
          "description": "File patterns to upload to artifact storage after step completes",
          "items": {
            "type": "string"
          },
          "examples": [
            ["app", "dist/**/*", "coverage.xml"]
          ]
        },
        "secrets": {
          "type": "array",
          "description": "Secrets to inject into step environment",
          "items": {
            "$ref": "#/definitions/secretReference"
          }
        },
        "conditional": {
          "type": "object",
          "description": "Conditions for step execution",
          "properties": {
            "branch": {
              "type": "string",
              "description": "Execute step only on matching branch pattern (glob supported)"
            },
            "onSuccess": {
              "type": "boolean",
              "default": true,
              "description": "Execute step only if all dependencies succeeded"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "secretReference": {
      "type": "object",
      "required": ["secretRef", "key"],
      "description": "Reference to Kubernetes Secret for injection into step",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "Name of Kubernetes Secret in same namespace"
        },
        "key": {
          "type": "string",
          "description": "Key within Secret to extract"
        },
        "envVar": {
          "type": "string",
          "description": "Environment variable name (defaults to key if not specified)"
        }
      },
      "additionalProperties": false
    },
    "matrix": {
      "type": "object",
      "required": ["dimensions"],
      "description": "Matrix strategy for running pipeline with multiple parameter combinations",
      "properties": {
        "dimensions": {
          "type": "object",
          "minProperties": 1,
          "description": "Matrix dimensions (each dimension is an array of values)",
          "additionalProperties": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            }
          },
          "examples": [
            {
              "os": ["ubuntu", "alpine"],
              "go_version": ["1.21", "1.22"]
            }
          ]
        },
        "exclude": {
          "type": "array",
          "description": "Exclude specific matrix combinations",
          "items": {
            "type": "object",
            "description": "Matrix combination to exclude (partial match supported)"
          },
          "examples": [
            [
              {"os": "alpine", "go_version": "1.21"}
            ]
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "examples": [
    {
      "version": "v1alpha1",
      "name": "my-app-ci",
      "steps": [
        {
          "name": "test",
          "image": "golang:1.21",
          "commands": [
            "go test ./..."
          ],
          "resources": {
            "cpu": "1000m",
            "memory": "2Gi"
          },
          "timeout": "10m"
        },
        {
          "name": "build",
          "image": "golang:1.21",
          "commands": [
            "go build -o app"
          ],
          "dependsOn": ["test"],
          "artifacts": ["app"]
        },
        {
          "name": "push-image",
          "image": "gcr.io/kaniko-project/executor:latest",
          "commands": [
            "/kaniko/executor --dockerfile=Dockerfile --context=. --destination=myregistry/app:$COMMIT_SHA"
          ],
          "dependsOn": ["build"],
          "secrets": [
            {
              "secretRef": "registry-credentials",
              "key": "config.json",
              "envVar": "DOCKER_CONFIG"
            }
          ],
          "conditional": {
            "branch": "main",
            "onSuccess": true
          }
        }
      ],
      "timeout": "1h"
    }
  ]
}
